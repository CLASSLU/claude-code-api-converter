name: Basic AI Review

on:
  push:
    branches: [master]

jobs:
  basic-review:
    runs-on: ubuntu-latest
    name: AI Test

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Test API
      env:
        API_KEY: ${{ secrets.UPSTREAM_API_KEY }}
      run: |
        if [ -z "$API_KEY" ]; then
          echo "API key not configured"
          exit 1
        fi

        HTTP_CODE=$(curl -s \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $API_KEY" \
          -d '{"model": "glm-4.6", "max_tokens": 50, "messages": [{"role": "user", "content": "test"}]}' \
          "https://apis.iflow.cn/v1/chat/completions" \
          -w "%{http_code}" \
          -o response.json)

        if [ "$HTTP_CODE" -ne 200 ]; then
          echo "Failed: $HTTP_CODE"
          cat response.json
          exit 1
        fi

        echo "Success: API working"

    - name: Analyze Changes
      id: changes
      run: |
        # Since we only have one commit, check what files exist
        FILES=$(find . -name "*.py" -o -name "*.js" -o -name "*.ts" -o -name "*.yml" 2>/dev/null | tr '\n' ' ')
        echo "files=$FILES" >> $GITHUB_OUTPUT
        echo "Found files: $FILES"

    - name: Simple Review
      if: steps.changes.outputs.files != ''
      env:
        API_KEY: ${{ secrets.UPSTREAM_API_KEY }}
      run: |
        FILES="${{ steps.changes.outputs.files }}"

        HTTP_CODE=$(curl -s \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $API_KEY" \
          -d "{\"model\": \"glm-4.6\", \"max_tokens\": 200, \"messages\": [{\"role\": \"user\", \"content\": \"Analyze changes in: $FILES. Return brief suggestions.\"}]}" \
          "https://apis.iflow.cn/v1/chat/completions" \
          -w "%{http_code}" \
          -o review.json)

        if [ "$HTTP_CODE" -eq 200 ]; then
          jq -r '.choices[0].message.content // "No content"' review.json || cat review.json
        else
          echo "Review failed: $HTTP_CODE"
        fi